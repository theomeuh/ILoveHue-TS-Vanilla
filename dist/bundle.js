!function(e){var t={};function n(o){if(t[o])return t[o].exports;var r=t[o]={i:o,l:!1,exports:{}};return e[o].call(r.exports,r,r.exports,n),r.l=!0,r.exports}n.m=e,n.c=t,n.d=function(e,t,o){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:o})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var o=Object.create(null);if(n.r(o),Object.defineProperty(o,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(o,r,function(t){return e[t]}.bind(null,r));return o},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o,r,i=document.createElement("canvas"),u=i.getContext("2d"),l=i.width,a=i.height;function c(){var e=i.getBoundingClientRect();o=e.left,r=e.top}document.body.appendChild(i),i.style.border="1px solid red",c(),window.onscroll=function(e){c()},window.onresize=function(e){c()},i.onresize=function(e){c()};var f=[];f.push({x:30,y:30,radius:15,color:"rgb(255,0,0)"}),f.push({x:100,y:-1,width:75,height:35,color:"rgb(0,0,255)"});var d,p,s,g=!1;function v(e,t){return e.color===t}function y(e,t,n){var o=e.getImageData(t,n,1,1).data;return"rgb("+o[0]+","+o[1]+","+o[2]+")"}function b(){u.clearRect(0,0,l,a);for(var e=0;e<f.length;e++){var t=f[e];t.radius&&(u.beginPath(),u.arc(t.x,t.y,t.radius,0,2*Math.PI),u.fillStyle=t.color,u.fill()),t.width&&(u.fillStyle=t.color,u.fillRect(t.x,t.y,t.width,t.height))}}b(),i.onmousedown=function(e){e.preventDefault(),e.stopPropagation(),d=e.clientX-o,p=e.clientY-r;for(var t=y(u,d,p),n=0;n<f.length;n++)if(v(f[n],t))return s=n,void(g=!0)},i.onmousemove=function(e){if(!g)return;e.preventDefault(),e.stopPropagation();var t=e.clientX-o,n=e.clientY-r,i=t-d,l=n-p,a=f[s];a.position.x+=i,a.position.y+=l,b(),d=t,p=n,console.log(y(u,t,n))},i.onmouseup=function(e){if(!g)return;e.preventDefault(),e.stopPropagation(),g=!1},i.onmouseout=function(e){if(!g)return;e.preventDefault(),e.stopPropagation(),g=!1}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,